{
  "swagger": "2.0",
  "info": {
    "title": "SORACOM API",
    "description": "SORACOM API v1",
    "version": "20150930"
  },
  "host": "api.soracom.io",
  "schemes": [
    "https"
  ],
  "basePath": "/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticate Operator",
        "description": "Operator の認証を行う。\n認証が成功した場合、API キー、オペレータ ID、 Token が返却される。\n認証が必要な API のリクエストには API キーと Token をヘッダーに付与する必要がある。\n",
        "operationId": "auth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "auth",
            "description": "認証リクエスト",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "認証成功",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "メールアドレスもしくはパスワードが誤っている"
          }
        }
      }
    },
    "/auth/password_reset_token/issue": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Issue Operator Password Reset Token",
        "description": "パスワードリセット確認用のワンタイムトークンをメールで送付する。",
        "operationId": "issue_password_reset_token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssuePasswordResetTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid email address."
          }
        }
      }
    },
    "/auth/password_reset_token/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify Operator Password Reset Token",
        "description": "Operator のパスワードをリセットする。パスワードリセット確認メールに入っている\nワンタイムトークンと新しいパスワードをパラメータに含めて呼び出しを行う。\n",
        "operationId": "verify_password_reset_token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyPasswordResetTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid token."
          },
          "404": {
            "description": "Token timeout."
          }
        }
      }
    },
    "/operators/{operator_id}/token": {
      "post": {
        "tags": [
          "Operator"
        ],
        "summary": "Generate Authentication Token",
        "description": "新しい API トークンを発行する。\n現在の API トークンをヘッダーに入れてリクエストを行うと、新しい API トークンを含んだレスポンスを返す。\n以降のリクエスト時にはこの新しい API トークンを用いることができる。\n",
        "operationId": "generate_operator_token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenerateTokenResponse"
            }
          },
          "400": {
            "description": "リクエストに誤りがあるか、指定されたトークンがすでに無効になっている（後者の場合、/auth API で再度認証を行う必要がある）",
            "schema": {
              "$ref": "#/definitions/APICallError"
            }
          }
        }
      }
    },
    "/operators/{operator_id}/password": {
      "post": {
        "tags": [
          "Operator"
        ],
        "summary": "Update Operator Password",
        "description": "Operator のパスワードを更新する。\n",
        "operationId": "update_operator_password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operator_id",
            "in": "path",
            "description": "operator ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid password."
          }
        }
      }
    },
    "/operators/{operator_id}/support/token": {
      "post": {
        "tags": [
          "Operator"
        ],
        "summary": "Generate Token for Support Console",
        "description": "サポート画面アクセス用のトークンを返す。\n",
        "operationId": "generate_support_token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operator_id",
            "in": "path",
            "description": "operator Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupportTokenResponse"
            }
          },
          "400": {
            "description": "Invalid Operator Id"
          },
          "403": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/operators": {
      "post": {
        "tags": [
          "Operator"
        ],
        "summary": "Create Operator",
        "description": "Operator の新規登録をリクエストする。\nパラメーターで指定されたメールアドレスに宛てて、Operator 登録確認用の\nワンタイムトークンを含んだメールが送信される。\n",
        "operationId": "create_operator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOperatorRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Operator が作成された"
          },
          "400": {
            "description": "メールアドレスがすでに登録されているか、パスワードのフォーマットが不正"
          }
        }
      }
    },
    "/operators/verify": {
      "post": {
        "tags": [
          "Operator"
        ],
        "summary": "Verify Operator",
        "description": "Operator 登録の確認を行う。\nメールで送られてくる確認用ワンタイムトークンをパラメーターに含めて呼び出しを行う。\n",
        "operationId": "verify_operator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VerifyOperatorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "登録成功"
          },
          "400": {
            "description": "ワンタイムトークンが不正"
          },
          "404": {
            "description": "ワンタイムトークンが期限切れ"
          }
        }
      }
    },
    "/operators/{operator_id}": {
      "get": {
        "tags": [
          "Operator"
        ],
        "summary": "Get Operator",
        "description": "Operatorの情報を返す。\n",
        "operationId": "get_operator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operator_id",
            "in": "path",
            "description": "operator ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOperatorResponse"
            }
          },
          "400": {
            "description": "Invalid Operator Id"
          }
        }
      }
    },
    "/subscribers": {
      "get": {
        "summary": "List Subscribers",
        "description": "条件にマッチするSubscriberのリストを返す。Subscriberの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。\n",
        "operationId": "list_subscribers",
        "parameters": [
          {
            "name": "tag_name",
            "in": "query",
            "description": "検索対象にするタグの名前(完全一致)。",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag_value",
            "in": "query",
            "description": "検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag_value_match_mode",
            "in": "query",
            "description": "タグの検索条件。",
            "required": false,
            "type": "string",
            "enum": [
              "exact",
              "prefix"
            ],
            "default": "exact"
          },
          {
            "name": "status_filter",
            "in": "query",
            "description": "検索対象にするstatus。`|`で区切って複数指定することができる。指定可能な値の一覧はこちら",
            "required": false,
            "type": "string"
          },
          {
            "name": "speed_class_filter",
            "in": "query",
            "description": "検索対象にするspeed_class。`|`で区切って複数指定することができる。指定可能な値の一覧はこちら",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "取得するSubscriberの上限",
            "required": false,
            "type": "number"
          },
          {
            "name": "last_evaluated_key",
            "in": "query",
            "description": "現ページで取得した最後のSubscriberのIMSI。このパラメータを指定することで次のSubscriber以降のリストを取得できる。",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "A list of subscibers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscriber"
              }
            }
          }
        }
      }
    },
    "/subscribers/{imsi}/register": {
      "post": {
        "summary": "Register Subscriber",
        "description": "Subscriberを登録",
        "operationId": "register_subscriber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterSubscribersRequest"
            }
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "201": {
            "description": "Subscriber登録完了",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          }
        }
      }
    },
    "/subscribers/{imsi}": {
      "get": {
        "summary": "Get Subscriber",
        "description": "指定されたSubscriberの情報を返す。",
        "operationId": "get_subscriber",
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "指定されたSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/update_speed_class": {
      "post": {
        "summary": "Update Subscriber speed class",
        "description": "指定されたSubscriberの速度クラスを変更します",
        "operationId": "update_subscriber_speed_class",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "type": "string",
            "description": "対象のSubscriberのIMSI",
            "required": true
          },
          {
            "name": "speed_class",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateSpeedClassRequest"
            }
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/activate": {
      "post": {
        "summary": "Activate Subscriber",
        "description": "指定されたSubscriberのステータスを有効化",
        "operationId": "activate_subscriber",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string",
            "format": "IMSI"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/deactivate": {
      "post": {
        "summary": "Deactivate Subscriber",
        "description": "指定されたSubscriberを無効化",
        "operationId": "deactivate_subscriber",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string",
            "format": "IMSI"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/terminate": {
      "post": {
        "summary": "Terminate Subscriber",
        "description": "指定されたSubscriberをTerminate",
        "operationId": "terminate_subscriber",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string",
            "format": "IMSI"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/enable_termination": {
      "post": {
        "summary": "Enable Termination of Subscriber",
        "description": "指定されたSubscriberをTerminate可能に設定する",
        "operationId": "enable_termination_subscriber",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string",
            "format": "IMSI"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/disable_termination": {
      "post": {
        "summary": "Disable Termination of Subscriber",
        "description": "指定されたSubscriberをTerminate不可能に設定する",
        "operationId": "disable_termination_subscriber",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string",
            "format": "IMSI"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/set_expiry_time": {
      "post": {
        "summary": "Update Expiry Time of Subscriber",
        "description": "指定されたSubscriberの有効期限を更新",
        "operationId": "set_expiry_time_subscriber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string",
            "format": "IMSI"
          },
          {
            "name": "request",
            "in": "body",
            "description": "更新後の有効期限(unixtime:ミリ秒単位)",
            "schema": {
              "$ref": "#/definitions/ExpiryTime"
            },
            "required": true
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/unset_expiry_time": {
      "post": {
        "summary": "Delete Expiry Time of Subscriber",
        "description": "指定されたSubscriberの有効期限を削除して無期限に変更",
        "operationId": "unset_expiry_time_subscriber",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "204": {
            "description": "当該Subscriberの有効期限を無期限に変更完了"
          },
          "404": {
            "description": "指定されたSubscriberが存在しないか、Subscriberに有効期限がない"
          }
        }
      }
    },
    "/subscribers/{imsi}/set_group": {
      "post": {
        "summary": "Set Group to Subscriber",
        "description": "指定されたSubscriberの所属先Groupを指定あるいは上書き変更",
        "operationId": "set_group_subscriber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string"
          },
          {
            "name": "group",
            "in": "body",
            "description": "Group（IDのみを含めばよい）",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "required": true
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/unset_group": {
      "post": {
        "summary": "Unset Group to Subscriber",
        "description": "指定されたSubscriberのGroup指定を解除",
        "operationId": "unset_group_subscriber",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しないか、SubscriberはGroupに属していない"
          }
        }
      }
    },
    "/subscribers/{imsi}/tags": {
      "put": {
        "summary": "Bulk Insert or Update Subscriber Tags",
        "description": "指定されたSubscriberのタグを追加・更新",
        "operationId": "bulk_update_subscriber_tags",
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "body",
            "description": "追加・更新対象のタグの配列",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagUpdateRequest"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/subscribers/{imsi}/tags/{tag_name}": {
      "delete": {
        "summary": "Delete Subscriber Tag",
        "description": "指定されたSubscriberのタグを削除",
        "operationId": "delete_subscriber_tags",
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "対象のSubscriberのIMSI",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag_name",
            "in": "path",
            "description": "削除対象のタグ名",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Subscriber"
        ],
        "responses": {
          "204": {
            "description": "対象のタグの削除が完了"
          },
          "404": {
            "description": "指定されたSubscriberあるいはタグが存在しない"
          }
        }
      }
    },
    "/stats/air/subscribers/{imsi}": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get Air Usage Report of Subscriber",
        "description": "IMSI で指定した Subscriber の通信量履歴を取得する。",
        "operationId": "get_stats_air_subscriber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "imsi",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "集計対象時刻の始まりをunixtimeで与える",
            "required": true,
            "type": "long"
          },
          {
            "name": "to",
            "in": "query",
            "description": "集計対象時刻の終わりをunixtimeで与える",
            "required": true,
            "type": "long"
          },
          {
            "name": "period",
            "in": "query",
            "description": "集計単位。minutesは5分おき",
            "required": true,
            "type": "string",
            "enum": [
              "month",
              "day",
              "minutes"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AirStatsResponse"
              }
            }
          }
        }
      }
    },
    "/stats/beam/subscribers/{imsi}": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get Beam Usage Report of Subscriber",
        "description": "IMSI で指定した Subscriber のSoracom Beam利用量履歴を取得する。",
        "operationId": "get_stats_beam_subscriber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "imsi",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "集計対象時刻の始まりをunixtimeで与える",
            "required": true,
            "type": "long"
          },
          {
            "name": "to",
            "in": "query",
            "description": "集計対象時刻の終わりをunixtimeで与える",
            "required": true,
            "type": "long"
          },
          {
            "name": "period",
            "in": "query",
            "description": "集計単位。minutesは5分おき",
            "required": true,
            "type": "string",
            "enum": [
              "month",
              "day",
              "minutes"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BeamStatsResponse"
              }
            }
          }
        }
      }
    },
    "/stats/air/operators/{operator_id}/export": {
      "post": {
        "tags": [
          "Stats"
        ],
        "summary": "Export Air Usage Report of All Subscribers",
        "description": "Operator が保有する全 Subscriber の通信量をファイルで取得する。\n取得対象の期間は from, to のunixtimeで指定する。\n履歴の詳細度は月単位。\nファイルの出力先は AWS S3。\nファイルの出力形式は CSV。\n",
        "operationId": "export_stats_air_operator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operator_id",
            "in": "path",
            "description": "operator_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileOutputResult"
            }
          }
        }
      }
    },
    "/stats/beam/operators/{operator_id}/export": {
      "post": {
        "tags": [
          "Stats"
        ],
        "summary": "Export Beam Usage Report of All Subscribers",
        "description": "Operator が保有する全 Subscriber の通信量をファイルで取得する。\n取得対象の期間は from, to のunixtimeで指定する。\n履歴の詳細度は月単位。\nファイルの出力先は AWS S3。\nファイルの出力形式は CSV。\n",
        "operationId": "export_stats_beam_operator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operator_id",
            "in": "path",
            "description": "operator_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileOutputResult"
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "summary": "List Groups",
        "description": "Groupの一覧を返す\n",
        "operationId": "list_groups",
        "parameters": [
          {
            "name": "tag_name",
            "in": "query",
            "description": "GroupについたTag名。完全一致するTag名が検索対象となる。tag_nameを指定した場合、tag_valueはが必須。",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag_value",
            "in": "query",
            "description": "GroupについたTagの値。",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag_value_match_mode",
            "in": "query",
            "description": "Tagの値のマッチングモードを指定。完全一致 (exact) あるいは前方一致 (prefix)。無指定の場合のデフォルトはexact。",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "レスポンス1ページあたりの最大数",
            "required": false,
            "type": "number"
          },
          {
            "name": "last_evaluated_key",
            "in": "query",
            "description": "現ページで取得した最後のGroupのID。このパラメータを指定することで次のGroupから始まるリストを取得できる。",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "Groupの一覧",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Group",
        "description": "Groupを新規作成する\n",
        "operationId": "create_group",
        "parameters": [
          {
            "name": "Group",
            "in": "body",
            "description": "作成対象のGroup",
            "schema": {
              "$ref": "#/definitions/CreateGroupRequest"
            },
            "required": true
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        }
      }
    },
    "/groups/{group_id}": {
      "get": {
        "summary": "Get Group",
        "description": "Group IDで指定されたGroupを返す\n",
        "operationId": "get_group",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "対象のGroupのID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "指定されたGroup",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "404": {
            "description": "指定されたGroupは存在しない"
          }
        }
      },
      "delete": {
        "summary": "Delete Group",
        "description": "Group IDで指定されたGroupを削除する",
        "operationId": "delete_group",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "対象のGroupのID",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "204": {
            "description": "指定されたGroupを削除完了"
          },
          "404": {
            "description": "指定されたGroupは存在しない"
          }
        }
      }
    },
    "/groups/{group_id}/subscribers": {
      "get": {
        "summary": "List Subscribers in a group",
        "description": "Group IDで指定されたGroupに属するSubscriberの一覧を返す\n",
        "operationId": "list_subscribers_in_group",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "対象のGroupのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "レスポンス1ページあたりの最大数",
            "required": false,
            "type": "number"
          },
          {
            "name": "last_evaluated_key",
            "in": "query",
            "description": "現ページで取得した最後のSubscriberのIMSI。このパラメータを指定することで次のSubscriber以降のリストを取得できる。",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "指定されたGroup",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "404": {
            "description": "指定されたGroupは存在しない"
          }
        }
      }
    },
    "/groups/{group_id}/configuration/{namespace}": {
      "put": {
        "summary": "Update Group Configuration Parameters",
        "description": "指定されたGroupのパラメータを追加・更新\n",
        "operationId": "bulk_update_group_configuration_parameters",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "対象のGroup",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "対象のConfiguration",
            "type": "string",
            "enum": [
              "SoracomBeam"
            ]
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "更新対象のオブジェクトの配列",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupConfigurationUpdateRequest"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "更新後のGroup",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "404": {
            "description": "指定されたGroupが存在しない"
          }
        }
      }
    },
    "/groups/{group_id}/configuration/{namespace}/{name}": {
      "delete": {
        "summary": "Delete Group Configuration Parameters",
        "description": "指定されたGroupのパラメータを削除\n",
        "operationId": "delete_group_configuration_parameter",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "対象のGroup",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "対象のパラメータのネームスペース",
            "type": "string",
            "enum": [
              "SoracomBeam"
            ]
          },
          {
            "name": "name",
            "in": "path",
            "description": "削除対象のパラメータ名",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "更新後のGroup",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "404": {
            "description": "指定されたGroupが存在しない"
          }
        }
      }
    },
    "/groups/{group_id}/tags": {
      "put": {
        "summary": "Update Group Tags",
        "description": "指定されたConfiguratio Groupのタグを追加・更新\n",
        "operationId": "update_group",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "対象のGroupのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "body",
            "description": "更新対象のタグの配列",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagUpdateRequest"
              }
            },
            "required": true
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "更新後のSubscriberの詳細情報",
            "schema": {
              "$ref": "#/definitions/Subscriber"
            }
          },
          "404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "/groups/{group_id}/tags/{tag_name}": {
      "delete": {
        "summary": "Delete Group Tag",
        "description": "指定されたGroupのタグを削除\n",
        "operationId": "delete_group",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "対象のGroupのID",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag_name",
            "in": "path",
            "description": "削除対象のタグ名",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Group"
        ],
        "responses": {
          "204": {
            "description": "対象のタグの削除が完了"
          },
          "404": {
            "description": "指定されたSubscriberあるいはタグが存在しない"
          }
        }
      }
    },
    "/event_handlers": {
      "get": {
        "tags": [
          "Event Handler"
        ],
        "summary": "List Event Handlers",
        "description": "イベントハンドラの一覧を返す。\n",
        "operationId": "list_event_handlers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "target",
            "in": "query",
            "description": "target",
            "required": false,
            "type": "string",
            "enum": [
              "operator",
              "group"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventHandlerModel"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Event Handler"
        ],
        "summary": "Create Event Handler",
        "description": "イベントハンドラを新規作成する。\n",
        "operationId": "create_event_handler",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "req",
            "description": "req",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHandlerModel"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EventHandlerModel"
            }
          }
        }
      }
    },
    "/event_handlers/subscribers/{imsi}": {
      "get": {
        "tags": [
          "Event Handler"
        ],
        "summary": "List Event Handlers related to Subscriber",
        "description": "対象IMSIにひもづくイベントハンドラのリストを返す。\n",
        "operationId": "list_event_handlers_by_subscriber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imsi",
            "in": "path",
            "description": "imsi",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventHandlerModel"
              }
            }
          }
        }
      }
    },
    "/event_handlers/{handler_id}": {
      "get": {
        "tags": [
          "Event Handler"
        ],
        "summary": "Get Event Handler",
        "description": "指定されたイベントハンドラの情報を返す。\n",
        "operationId": "get_event_handler",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "handler_id",
            "in": "path",
            "description": "handler ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventHandlerModel"
            }
          },
          "404": {
            "description": "Handler not found."
          }
        }
      },
      "put": {
        "tags": [
          "Event Handler"
        ],
        "summary": "Update Event Handler",
        "description": "指定されたイベントハンドラを更新する。\n",
        "operationId": "update_event_handler",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "handler_id",
            "in": "path",
            "description": "handler ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "eventHandlerModel",
            "description": "eventHandlerModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHandlerModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid handlerId."
          }
        }
      },
      "delete": {
        "tags": [
          "Event Handler"
        ],
        "summary": "Delete Event Handler",
        "description": "指定されたイベントハンドラを削除する。\n",
        "operationId": "delete_event_handler",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "handler_id",
            "in": "path",
            "description": "handler ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "EventHandler not found."
          }
        }
      }
    }
  },
  "definitions": {
    "Subscriber": {
      "properties": {
        "imsi": {
          "type": "string"
        },
        "msisdn": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "apn": {
          "type": "string"
        },
        "speed_class": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        },
        "expiryTime": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "tags": {
          "$ref": "#/definitions/Map"
        },
        "operatorId": {
          "type": "string"
        }
      }
    },
    "ExpiryTime": {
      "properties": {
        "expiryTime": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "expiryTime"
      ]
    },
    "Map": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "Tag": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "example": {
        "location": "tokyo"
      }
    },
    "TagUpdateRequest": {
      "type": "object",
      "properties": {
        "tagName": {
          "type": "string"
        },
        "tagValue": {
          "type": "string"
        }
      },
      "required": [
        "tagName",
        "tagValue"
      ]
    },
    "GroupConfigurationUpdateRequest": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Group": {
      "properties": {
        "configuration": {
          "$ref": "#/definitions/Map"
        },
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "groupId": {
          "type": "string"
        },
        "lastModifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "operatorId": {
          "type": "string"
        },
        "tags": {
          "$ref": "#/definitions/Tag"
        }
      }
    },
    "CreateGroupRequest": {
      "properties": {
        "tags": {
          "$ref": "#/definitions/Tag"
        }
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "CreateOperatorRequest": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "パスワードは以下の条件を満たしている必要があります：長さ 8 文字以上100 文字以内、アルファベット小文字 (a-z) を 1 文字以上使用、アルファベット大文字 (A-Z) を 1 文字以上使用、数字を 1 文字以上使用。記号なども使用できます。"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "VerifyOperatorsRequest": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "required": [
        "token"
      ]
    },
    "AuthRequest": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "tokenTimeoutSeconds": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "AuthResponse": {
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "operatorId": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "required": [
        "apiKey",
        "operatorId",
        "token"
      ]
    },
    "APIKeyResponse": {
      "properties": {
        "apiKey": {
          "type": "string"
        }
      }
    },
    "ListSubOperatorsResponse": {
      "properties": {
        "operatorId": {
          "type": "string"
        }
      }
    },
    "GetOperatorResponse": {
      "properties": {
        "createDate": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "operatorId": {
          "type": "string"
        },
        "rootOperatorId": {
          "type": "string"
        },
        "updateDate": {
          "type": "string"
        }
      }
    },
    "IssuePasswordResetTokenRequest": {
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    },
    "VerifyPasswordResetTokenRequest": {
      "properties": {
        "password": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "required": [
        "password",
        "token"
      ]
    },
    "SupportTokenResponse": {
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "GenerateTokenRequest": {
      "properties": {
        "timeout_seconds": {
          "type": "integer",
          "description": "新しい API トークンの有効期限の長さ（秒単位）。\n指定しなければデフォルトは 86400 [秒]（24時間）。\n最大値は 172800 [秒]（48時間）。\n"
        }
      }
    },
    "GenerateTokenResponse": {
      "properties": {
        "apiToken": {
          "type": "string"
        }
      }
    },
    "UpdatePasswordRequest": {
      "properties": {
        "currentPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "CreateSubOperatorsRequest": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RegisterSubscribersRequest": {
      "properties": {
        "registrationSecret": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        }
      },
      "required": [
        "registrationSecret"
      ]
    },
    "UpdateSpeedClassRequest": {
      "properties": {
        "speedClass": {
          "type": "string",
          "enum": [
            "s1.minimum",
            "s1.slow",
            "s1.standard",
            "s1.fast"
          ]
        }
      },
      "required": [
        "speedClass"
      ]
    },
    "DataTrafficStats": {
      "properties": {
        "downloadByteSizeTotal": {
          "type": "integer",
          "format": "int64"
        },
        "downloadPacketSizeTotal": {
          "type": "integer",
          "format": "int64"
        },
        "uploadByteSizeTotal": {
          "type": "integer",
          "format": "int64"
        },
        "uploadPacketSizeTotal": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SoracomBeamStats": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Map«string,string»": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "AirStatsResponse": {
      "properties": {
        "dataTrafficStatsMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataTrafficStats"
          }
        },
        "date": {
          "type": "string"
        },
        "unixtime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BeamStatsResponse": {
      "properties": {
        "beamStatsMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SoracomBeamStats"
          }
        },
        "date": {
          "type": "string"
        },
        "unixtime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ExportRequest": {
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "period": {
          "type": "string",
          "enum": [
            "month",
            "day",
            "minutes"
          ]
        },
        "to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Config": {
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FileOutputResult": {
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "Map«string,DataTrafficStats»": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/DataTrafficStats"
      }
    },
    "EventHandlerModel": {
      "properties": {
        "actionConfigList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Config"
          }
        },
        "description": {
          "type": "string"
        },
        "handlerId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ruleConfig": {
          "$ref": "#/definitions/Config"
        },
        "status": {
          "type": "string"
        },
        "targetGroupId": {
          "type": "string"
        },
        "targetImsi": {
          "type": "string"
        },
        "targetOperatorId": {
          "type": "string"
        }
      },
      "required": [
        "handlerId",
        "status",
        "ruleConfig",
        "actionConfigList"
      ]
    }
  }
}
